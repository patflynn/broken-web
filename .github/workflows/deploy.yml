name: Deploy to GCS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/411022031947/locations/global/workloadIdentityPools/dev-workflows-pool/providers/github-workflows
          service_account: broken-web-github-deployer@broken-dev.iam.gserviceaccount.com
          create_credentials_file: true

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          
      - name: Create temporary file list
        run: |
          # Create a list of files to upload to avoid rsync issues
          find . -type f -not -path "./.git/*" -not -path "./.github/*" -not -name ".gitignore" -not -name "CLAUDE.md" -not -name "README.md" > files_to_upload.txt
          echo "Files to be uploaded:"
          cat files_to_upload.txt
          
      - name: Deploy files to Google Cloud Storage
        run: |
          echo "Uploading files to ${{ secrets.GCS_BUCKET_NAME }}"
          while read file; do
            echo "Uploading $file"
            gsutil cp "$file" "gs://${{ secrets.GCS_BUCKET_NAME }}/$file"
          done < files_to_upload.txt
          
      - name: Set up 404 error handling
        run: |
          echo "Setting up 404 error handling"
          gsutil cp index.html "gs://${{ secrets.GCS_BUCKET_NAME }}/404.html"
          
      - name: Set CORS policy
        run: |
          echo "Setting CORS policy"
          gsutil cors set cors.json "gs://${{ secrets.GCS_BUCKET_NAME }}"
          
      - name: Set website configuration
        run: |
          echo "Setting website configuration"
          gsutil web set -m index.html -e 404.html "gs://${{ secrets.GCS_BUCKET_NAME }}"
          
      - name: Set public access
        run: |
          echo "Setting public access"
          gsutil iam ch allUsers:objectViewer "gs://${{ secrets.GCS_BUCKET_NAME }}"